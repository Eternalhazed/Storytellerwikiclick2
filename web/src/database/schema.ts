/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely"

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>

export interface Account {
  accessToken: string | null
  createdAt: Generated<string>
  expiresAt: number | null
  id: Generated<import("@/uuid").UUID>
  idToken: string | null
  provider: string
  providerAccountId: string
  refreshToken: string | null
  scope: string | null
  sessionState: string | null
  tokenType: string | null
  type: string
  updatedAt: Generated<string>
  userId: string
}

export interface Author {
  createdAt: Generated<string>
  fileAs: string
  id: number | null
  name: string
  updatedAt: Generated<string>
  uuid: Generated<import("@/uuid").UUID>
}

export interface AuthorToBook {
  authorUuid: import("@/uuid").UUID
  bookUuid: import("@/uuid").UUID
  createdAt: Generated<string>
  id: number | null
  role: string | null
  updatedAt: Generated<string>
  uuid: Generated<import("@/uuid").UUID>
}

export interface Book {
  alignedAt: string | null
  alignedByStorytellerVersion: string | null
  alignedWith: string | null
  createdAt: Generated<string>
  description: string | null
  id: number | null
  language: Generated<string | null>
  narrator: string | null
  publicationDate: string | null
  rating: number | null
  statusUuid: import("@/uuid").UUID
  title: string
  updatedAt: Generated<string>
  uuid: Generated<import("@/uuid").UUID>
}

export interface BookToCollection {
  bookUuid: import("@/uuid").UUID
  collectionUuid: import("@/uuid").UUID
  createdAt: Generated<string>
  updatedAt: Generated<string>
  uuid: Generated<import("@/uuid").UUID>
}

export interface BookToSeries {
  bookUuid: import("@/uuid").UUID
  createdAt: Generated<string>
  featured: Generated<boolean>
  position: number | null
  seriesUuid: import("@/uuid").UUID
  updatedAt: Generated<string>
  uuid: Generated<import("@/uuid").UUID>
}

export interface BookToTag {
  bookUuid: import("@/uuid").UUID
  createdAt: Generated<string>
  tagUuid: import("@/uuid").UUID
  updatedAt: Generated<string>
  uuid: Generated<import("@/uuid").UUID>
}

export interface Collection {
  createdAt: Generated<string>
  description: string | null
  name: string
  public: Generated<boolean>
  updatedAt: Generated<string>
  uuid: Generated<import("@/uuid").UUID>
}

export interface CollectionToUser {
  collectionUuid: import("@/uuid").UUID
  createdAt: Generated<string>
  updatedAt: Generated<string>
  userUuid: import("@/uuid").UUID
  uuid: Generated<import("@/uuid").UUID>
}

export interface Migration {
  createdAt: Generated<string>
  hash: string
  id: Generated<number>
  name: string
  updatedAt: Generated<string>
}

export interface Position {
  bookUuid: import("@/uuid").UUID
  createdAt: Generated<string>
  locator: string
  timestamp: number
  updatedAt: Generated<string>
  userUuid: import("@/uuid").UUID
  uuid: Generated<import("@/uuid").UUID>
}

export interface ProcessingTask {
  bookUuid: import("@/uuid").UUID
  createdAt: Generated<string>
  id: number | null
  progress: Generated<number>
  status: import("@/apiModels/models/ProcessingStatus").ProcessingTaskStatus
  type: import("@/apiModels/models/ProcessingStatus").ProcessingTaskType
  updatedAt: Generated<string>
  uuid: Generated<import("@/uuid").UUID>
}

export interface Series {
  createdAt: Generated<string>
  description: string | null
  name: string
  updatedAt: Generated<string>
  uuid: Generated<import("@/uuid").UUID>
}

export interface Session {
  createdAt: Generated<string>
  expires: Date
  id: Generated<import("@/uuid").UUID>
  sessionToken: string
  updatedAt: Generated<string>
  userId: import("@/uuid").UUID
}

export interface Settings {
  createdAt: Generated<string>
  id: number | null
  name: keyof typeof import("@/database/settingsTypes").SETTINGS_ROW_NAMES
  updatedAt: Generated<string>
  uuid: Generated<import("@/uuid").UUID>
  value: string
}

export interface Status {
  createdAt: Generated<string>
  isDefault: Generated<boolean>
  name: string
  updatedAt: Generated<string>
  uuid: Generated<import("@/uuid").UUID>
}

export interface Tag {
  createdAt: Generated<string>
  name: string
  updatedAt: Generated<string>
  uuid: Generated<import("@/uuid").UUID>
}

export interface TokenRevokation {
  createdAt: Generated<string>
  token: string
  updatedAt: Generated<string>
}

export interface User {
  createdAt: Generated<string>
  email: string
  emailVerified: Date | null
  hashedPassword: string | null
  id: Generated<import("@/uuid").UUID>
  inviteAccepted: Date | null
  inviteKey: string | null
  name: string | null
  updatedAt: Generated<string>
  username: string | null
  userPermissionUuid: import("@/uuid").UUID
}

export interface UserPermission {
  bookCreate: Generated<boolean>
  bookDelete: Generated<boolean>
  bookDownload: Generated<boolean>
  bookList: Generated<boolean>
  bookProcess: Generated<boolean>
  bookRead: Generated<boolean>
  bookUpdate: Generated<boolean>
  collectionCreate: Generated<boolean>
  createdAt: Generated<string>
  id: number | null
  inviteDelete: Generated<boolean>
  inviteList: Generated<boolean>
  settingsUpdate: Generated<boolean>
  updatedAt: Generated<string>
  userCreate: Generated<boolean>
  userDelete: Generated<boolean>
  userList: Generated<boolean>
  userRead: Generated<boolean>
  userUpdate: Generated<boolean>
  uuid: Generated<import("@/uuid").UUID>
}

export interface VerificationToken {
  createdAt: Generated<string>
  expires: Date
  identifier: string
  token: string
  updatedAt: Generated<string>
}

export interface DB {
  account: Account
  author: Author
  authorToBook: AuthorToBook
  book: Book
  bookToCollection: BookToCollection
  bookToSeries: BookToSeries
  bookToTag: BookToTag
  collection: Collection
  collectionToUser: CollectionToUser
  migration: Migration
  position: Position
  processingTask: ProcessingTask
  series: Series
  session: Session
  settings: Settings
  status: Status
  tag: Tag
  tokenRevokation: TokenRevokation
  user: User
  userPermission: UserPermission
  verificationToken: VerificationToken
}
